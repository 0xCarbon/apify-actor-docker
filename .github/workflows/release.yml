name: Build Beta

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Tag for the images (e.g.: beta)'
        required: true
      apify_version:
        description: 'Apify SDK version (e.g.: ^O.21.9)'
        required: true
      puppeteer_version:
        description: 'Puppeteer version (e.g.: 5.3.1)'
        required: true

  repository_dispatch:
    types: [ build-images ]

  env:
    RELEASE_TAG: ${{ github.events.inputs.release_tag || github.events.client-payload.release_tag }}
    APIFY_VERSION: ${{ github.events.inputs.apify_version || github.events.client-payload.apify_version }}
    PUPPETEER_VERSION: ${{ github.events.inputs.puppeteer_version || github.events.client-payload.puppeteer_version }}

jobs:
  # Build master images that are not dependent on existing builds.
  build-main:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image-name: [node-basic, node-chrome, node-phantomjs]
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Set Dependency Versions
        run: |
          cd ${{ matrix.image-name }}
          node ../.github/scripts/set-dependency-versions.js
      -
        name: Build Images
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./${{ matrix.image-name }}
          file: ./${{ matrix.image-name }}/Dockerfile
          load: true
          tags: apify/actor-${{ matrix.image-name }}:${{ env.RELEASE_TAG }}
          build-args: |
            TAG=${{ env.RELEASE_TAG }}
      -
         name: Test Images
         run: docker run apify/actor-${{ matrix.image-name }}:${{ env.RELEASE_TAG }}
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Push Images
        run: docker push apify/actor-${{ matrix.image-name }}:${{ env.RELEASE_TAG }}

build-dependent:
  # Build images that depend on existence of previous builds of main images.
  runs-on: ubuntu-latest
  needs: [ build-master ]
  strategy:
    matrix:
      image-name: [node-chrome-xvfb]
  steps:
    -
      name: Checkout
      uses: actions/checkout@v2
    -
      name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    -
      name: Set Dependency Versions
      run: |
        cd ${{ matrix.image-name }}
        node ../.github/scripts/set-dependency-versions.js
    -
      name: Build Images
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: ./${{ matrix.image-name }}
        file: ./${{ matrix.image-name }}/Dockerfile
        load: true
        tags: apify/actor-${{ matrix.image-name }}:${{ env.RELEASE_TAG }}
        build-args: |
          TAG=${{ env.RELEASE_TAG }}
    -
      name: Test Images
      run: docker run apify/actor-${{ matrix.image-name }}:${{ env.RELEASE_TAG }}
    -
      name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
#    -
#       name: Push Images
#       run: docker push apify/actor-${{ matrix.image-name }}:${{ env.RELEASE_TAG }}
